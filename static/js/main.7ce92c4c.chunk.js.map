{"version":3,"sources":["components/elements/Header/Header.js","components/elements/Footer/Footer.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","className","to","src","alt","Styles","styled","div","Footer","width","height","href","Date","getFullYear","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","image","title","text","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","callback","name","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","movieId","movieName","clickable","pathname","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","console","log","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","localStorage","setItem","JSON","stringify","catch","error","getItem","parse","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","directors","min","max","optimum","low","high","vote_average","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","match","params","status_code","crew","filter","member","job","cast","location","runtime","NotFound","App","Fragment","exact","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ce92c4c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"rmdb-header\">\r\n            <div className=\"rmdb-header-content\">\r\n                <Link to=\"/\">\r\n                    <img src=\"./images/reactMovie_logo.png\" alt=\"rmdb-logo\" className=\"rmdb-logo\" />\r\n                </Link>\r\n                <img src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\" className=\"rmdb-tmdb-logo\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport styled from 'styled-components';\r\n// import logo from './assets/The_MovieDB_icon.png';\r\n\r\nconst Styles = styled.div`\r\n\r\n.footer {\r\n    background-image: url('https://www.themoviedb.org/assets/2/v4/footers_v2/BreakingBad-0541701c71d1c77aae2d4487be97b9a879fc41e881911fd3d32558f1f5f75d44.jpg'), radial-gradient(at 30% top, rgba(7, 64, 52, 1) 0%, rgba(8, 28, 36, 1) 70%);\r\n    height: 500px;\r\n    // box-sizing: border-box;\r\n    // padding: 0;\r\n    // background-position: center top;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    // display: flex;\r\n    // align-items: center;\r\n}\r\n\r\n.footer, nav {\r\n    // display: flex;\r\n    // justify-content: space-between;\r\n    margin: 0 auto;\r\n    font-size: .9em;\r\n}\r\n\r\n.footer, nav, a {\r\n    color: rgb(177, 175, 172);\r\n    outline:none;\r\n    &:hover {\r\n        color: #efefef;\r\n        text-decoration:none;\r\n    }\r\n}\r\n\r\n@media screen and (max-width:768px) {\r\n    .footer-bottom {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nfunction Footer() {\r\n    return (\r\n        <Styles>\r\n            <nav className=\"text-white footer d-flex\">\r\n                <div className=\"container align-items-center\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <img width={130} height={116} src=\"./images/tmdb_logo.png\" alt=\"logo\" />\r\n                    </div>\r\n                    <div className=\"container row justify-content-center text-center pt-5\">\r\n                        <div className=\"col-md-3 col-6\">\r\n                            <h4 className=\"text-uppercase\">The Basics</h4>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><a href=\"\">About TMDb</a></li>\r\n                                <li><a href=\"\">Contact Us</a></li>\r\n                                <li><a href=\"\">Support Forums</a></li>\r\n                                <li><a href=\"\">API</a></li>\r\n                                <li><a href=\"\">Blog</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-6\">\r\n                            <h4 className=\"text-uppercase\">Get Involved</h4>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><a href=\"\">Contribution Bible</a></li>\r\n                                <li><a href=\"\">3rd Party Applications</a></li>\r\n                                <li><a href=\"\">Add New Movie</a></li>\r\n                                <li><a href=\"\">Add New TV Show</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-6\">\r\n                            <h4 className=\"text-uppercase\">Community</h4>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><a href=\"\">Guidelines</a></li>\r\n                                <li><a href=\"\">Leaderboard</a></li>\r\n                                <li><a href=\"\">Forums</a></li>\r\n                                <li><a href=\"\">Twitter</a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-6\">\r\n                            <h4 className=\"text-uppercase\">Legal</h4>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><a href=\"\">Terms of Use</a></li>\r\n                                <li><a href=\"\">Privacy Policy</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"footer-bottom pt-5\">\r\n                        <p className=\"text-center\">\r\n                            &copy;{new Date().getFullYear()} - All Rights Reserved!\r\n                    </p>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </Styles>\r\n    )\r\n}\r\n\r\nexport default Footer;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e8609ce5184b8804333db9ca84e94b8b';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => {\r\n    return (\r\n        <div className=\"rmdb-heroimage\"\r\n            style={{\r\n                background:\r\n                    `linear-gradient(to bottom, rgba(0,0,0,0)\r\n                    39%,rgba(0,0,0,0)\r\n                    41%,rgba(0,0,0,0.65)\r\n                    100%),\r\n                    url('${props.image}'), #1c1c1c`\r\n            }}\r\n        >\r\n            <div className=\"rmdb-heroimage-content\">\r\n                <div className=\"rmdb-heroimage-text\">\r\n                    <h1>{props.title}</h1>\r\n                    <p>{props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroImage;","import React, { Component } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport FontAwesome from 'react-fontawesome';\nimport './SearchBar.css'\n\nclass SearchBar extends Component {\n    state = {\n        value: ''\n    }\n\n    timeout = null;\n\n    doSearch = (event) => {\n        this.setState({ value: event.target.value })\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            this.props.callback(this.state.value);\n        }, 500);\n    }\n\n    render() {\n        return (\n            <div className=\"rmdb-searchbar\">\n                <div className=\"rmdb-searchbar-content\">\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\n                    <input\n                        type=\"text\"\n                        className=\"rmdb-searchbar-input\"\n                        placeholder=\"Search for a movie...\"\n                        onChange={this.doSearch}\n                        value={this.state.value}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n\r\n    const renderElements = () => {\r\n        const gridElements = props.children.map( (element, i) => {\r\n            return (\r\n                <div key={i} className=\"rmdb-grid-element\">\r\n                    {element}\r\n                </div>\r\n            )\r\n        })\r\n        return gridElements;\r\n    }\r\n\r\n    return (\r\n        <div className=\"rmdb-grid\">\r\n            {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n            <div className=\"rmdb-grid-content\">\r\n                {renderElements()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './MovieThumb.css';\n\nconst MovieThumb = ({ image, movieId, movieName, clickable }) => (\n  <div className=\"rmdb-moviethumb\">\n    {/* You can send props via the Links \"to\" object. Here we create our own \"movieName\" */}\n    {clickable ?\n      <Link to={{ pathname: `/${movieId}`,  movieName: `${movieName}`}}>\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n      </Link>\n      :\n      <img src={image} alt=\"moviethumb\" />\n    }\n  </div>\n)\n\nexport default MovieThumb;","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <div className=\"rmdb-loadmorebtn\" onClick={onClick}>\n    <p>{text}</p>\n  </div>\n)\n\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport Footer from '../elements/Footer/Footer';\nimport './Home.css';\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: ''\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('HomeState')) {\n      const state = JSON.parse(localStorage.getItem('HomeState'));\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true });\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  searchItems = (searchTerm) => {\n    console.log(searchTerm);\n    let endpoint = '';\n    this.setState({\n      movies: [],\n      loading: true,\n      searchTerm\n    })\n\n    if (searchTerm === '') {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n    this.fetchItems(endpoint);\n\n  }\n\n  loadMoreItems = () => {\n    let endpoint = '';\n    this.setState({ loading: true });\n\n    if (this.state.searchTerm === '') {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\n    }\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = (endpoint) => {\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        this.setState({\n          movies: [...this.state.movies, ...result.results],\n          heroImage: this.state.heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        }, () => {\n          if (this.state.searchTerm === \"\") {\n            localStorage.setItem('HomeState', JSON.stringify(this.state));\n          }\n        })\n      })\n      .catch(error => console.error('Error:', error))\n  }\n\n  render() {\n    return (\n      <div className=\"rmdb-home\">\n        {this.state.heroImage && !this.state.searchTerm ?\n          <div>\n            <HeroImage\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\n              title={this.state.heroImage.original_title}\n              text={this.state.heroImage.overview}\n            />\n          </div> : null}\n        <SearchBar callback={this.searchItems} />\n        <div className=\"rmdb-home-grid\">\n          <FourColGrid\n            header={this.state.searchTerm ? 'Search Result' : 'Popular Movies'}\n            loading={this.state.loading}\n          >\n            {this.state.movies.map((element, i) => {\n              return <MovieThumb\n                key={i}\n                clickable={true}\n                image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\n                movieId={element.id}\n                movieName={element.original_title}\n              />\n            })}\n          </FourColGrid>\n          {this.state.loading ? <Spinner /> : null}\n          {(this.state.currentPage < this.state.totalPages && !this.state.loading) ?\n            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\n            : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <div className=\"rmdb-navigation\">\r\n            <div className=\"rmdb-navigation-content\">\r\n                <Link to=\"/\">\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p>/</p>\r\n                <p className=\"underline\">{props.movie}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = ({ movie, directors }) => (\n  <div className=\"rmdb-movieinfo\"\n    style={{\n      background: movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}')` : '#000'\n    }}\n  >\n    <div className=\"rmdb-movieinfo-content\">\n      <div className=\"rmdb-movieinfo-thumb\">\n        <MovieThumb\n          image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : './images/no_image.jpg'}\n          clickable={false}\n        />\n      </div>\n      <div className=\"rmdb-movieinfo-text\">\n        <h1>{movie.title}</h1>\n        <h3>Overview</h3>\n        <p>{movie.overview}</p>\n        <h3>IMDB RATING</h3>\n        <div className=\"rmdb-rating\">\n          <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={ movie.vote_average * 10}></meter>\n          <p className=\"rmdb-score\">{movie.vote_average}</p>\n          <p className=\"rmdb-percentage\">/ 10</p>\n        </div>\n        {directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n        {directors.map( (element, i) => {\n          return <p key={i} className=\"rmdb-director\">{element.name}</p>\n        })}\n      </div>\n      <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\n    </div>\n  </div>\n)\n\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers.js';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfobar\">\r\n            <div className=\"rmdb-movieinfobar-content\">\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) => {\r\n\r\n    const POSTER_SIZE = \"w154\";\r\n\r\n    return (\r\n        <div className=\"rmdb-actor\">\r\n            <img\r\n                src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\r\n                alt=\"actorthumb\"\r\n            />\r\n            <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n            <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Actor;","import React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid.js';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  }\n\n  componentDidMount() {\n    // ES6 destructuring the props\n    const { movieId } = this.props.match.params;\n\n    if (localStorage.getItem(`${movieId}`)) {\n      let state = JSON.parse(localStorage.getItem(`${movieId}`))\n      this.setState({ ...state })\n    } else {\n      this.setState({ loading: true })\n      // First fetch the movie ...\n      let endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  fetchItems = (endpoint) => {\n    // ES6 destructuring the props\n    const { movieId } = this.props.match.params;\n\n    fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n\n      if (result.status_code) {\n        // If we don't find any movie\n        this.setState({ loading: false });\n      } else {\n        this.setState({ movie: result }, () => {\n          // ... then fetch actors in the setState callback function\n          let endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n          fetch(endpoint)\n          .then(result => result.json())\n          .then(result => {\n\n            const directors = result.crew.filter( (member) => member.job === \"Director\");\n\n            this.setState({\n              actors: result.cast,\n              directors,\n              loading: false\n            }, () => {\n              localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\n            })\n          })\n        })\n      }\n    })\n    .catch(error => console.error('Error:', error))\n  }\n\n  render() {\n    // ES6 Destructuring the props and state\n    const { movieName } = this.props.location;\n    const { movie, directors, actors, loading } = this.state;\n\n    return (\n      <div className=\"rmdb-movie\">\n        {movie ?\n        <div>\n          <Navigation movie={movieName} />\n          <MovieInfo movie={movie} directors={directors} />\n          <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue} />\n        </div>\n        : null }\n        {actors ?\n        <div className=\"rmdb-movie-grid\">\n          <FourColGrid header={'Actors'}>\n            {actors.map( (element, i) => (\n              <Actor key={i} actor={element} />\n            ))}\n          </FourColGrid>\n        </div>\n        : null }\n        {!actors && !loading ? <h1>No movie found</h1> : null }\n        {loading ? <Spinner /> : null}\n      </div>\n    )\n  }\n}\n\nexport default Movie;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>Whooooops. This page doesn't exist</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from '../elements/Header/Header';\r\nimport Footer from '../elements/Footer/Footer';\r\nimport Home from '../Home/Home';\r\nimport Movie from '../Movie/Movie';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <React.Fragment>\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route exact path=\"/:movieId\" component={Movie} />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n                <Footer />\r\n            </React.Fragment>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}